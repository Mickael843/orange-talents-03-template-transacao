server.port=8082
server.servlet.context-path=/api

### JPA
spring.jpa.hibernate.ddl-auto=update

### DATABASE
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/transaction_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:admin}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

### KEYCLOAK
keycloak.public-client=true
keycloak.realm=${KEYCLOAK_REALM:backend}
keycloak.use-resource-role-mappings=true
keycloak.resource=${KEYCLOAK_RESOURCE:transaction}
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL:http://localhost:18080/auth}

### KAFKA
spring.kafka.topic.transactions=transacoes

# Endere√ßo do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer